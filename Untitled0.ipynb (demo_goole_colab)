{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Untitled0.ipynb",
      "provenance": [],
      "authorship_tag": "ABX9TyM02gQ8aCUDwitQ0nupx3zY",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Sinha123456/Breast_cancer/blob/master/Untitled0.ipynb%20(demo_goole_colab)\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "VgE5yy_bOkZr",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "678b7248-7161-489f-f81d-31756d0b56fd"
      },
      "source": [
        "pip install sklearn\n"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Requirement already satisfied: sklearn in /usr/local/lib/python3.6/dist-packages (0.0)\n",
            "Requirement already satisfied: scikit-learn in /usr/local/lib/python3.6/dist-packages (from sklearn) (0.22.2.post1)\n",
            "Requirement already satisfied: scipy>=0.17.0 in /usr/local/lib/python3.6/dist-packages (from scikit-learn->sklearn) (1.4.1)\n",
            "Requirement already satisfied: joblib>=0.11 in /usr/local/lib/python3.6/dist-packages (from scikit-learn->sklearn) (0.17.0)\n",
            "Requirement already satisfied: numpy>=1.11.0 in /usr/local/lib/python3.6/dist-packages (from scikit-learn->sklearn) (1.18.5)\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "bogLj737PPWi",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "ee515638-a6fe-4449-d71e-637bc6e5d7c6"
      },
      "source": [
        "pos = -1\n",
        "def search(list, n):\n",
        "    lowerbond = 0\n",
        "    upperbond = len(list)\n",
        "    while lowerbond<= upperbond:\n",
        "        mid = (lowerbond + upperbond) // 2\n",
        "        if list[mid] == n:\n",
        "            globals()['position'] = mid\n",
        "            return True\n",
        "            return False\n",
        "        else:\n",
        "            if list[mid] < n:\n",
        "                lowerbond = mid\n",
        "            else:\n",
        "                upperbond = mid\n",
        "        return False\n",
        "\n",
        "list = [3,5,8,11,22,32,34,45,55]\n",
        "n = 10\n",
        "if search(list,n):\n",
        "    print(\"number found at position\", position+1)\n",
        "else:\n",
        "    print(\"not found\")"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "not found\n"
          ],
          "name": "stdout"
        }
      ]
    }
  ]
}